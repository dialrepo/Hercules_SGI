name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Install Make
      run: sudo apt-get install -y make

    - name: Build sgi-starter-parent
      working-directory: sgi-starter-parent
      run: |
        make
        mvn clean install

    - name: Build sgi-framework-spring
      working-directory: sgi-framework-spring
      run: |
        make
        mvn clean install

    - name: Build remaining modules
      run: |
        for dir in $(ls -d */); do
          if [[ "$dir" != "sgi-starter-parent/" && "$dir" != "sgi-framework-spring/" ]]; then
            cd $dir
            make
            mvn clean install
            cd ..
          fi
        done

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Build and push Docker images
      run: |
        for dir in $(ls -d */); do
          cd $dir
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$(basename $dir):latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$(basename $dir):latest
          cd ..
        done

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
        -Dsonar.projectKey=your_project_key \
        -Dsonar.host.url=https://sonarqube.yourdomain.com \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up K8s context
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $KUBECONFIG

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f your-k8s-manifest.yml
